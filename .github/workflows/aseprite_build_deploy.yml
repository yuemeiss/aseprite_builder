name: ninja aseprite
on: [push]
env:
  BUILD_TYPE: Release
jobs:
  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get Download Links
      run: |
        brew install ninja
        pip install lastversion
        export GITHUB_API_TOKEN=${{ secrets.WORK1 }}
        echo "::set-output name=action_ase::$(lastversion --format assets aseprite/aseprite)"
        echo "::set-output name=action_tag::$(lastversion aseprite/aseprite)"
      id: links
    - name: Clone aseprite source
      run: |
        git clone --recursive https://github.com/aseprite/aseprite.git aseprite
    - name: Download compiled skia
      run: |
        wget -q -O skia.zip https://github.com/aseprite/skia/releases/latest/download/Skia-macOS-Release-x64.zip
        7z x skia.zip -y -oskia | grep ing
    - name: Find path
      id: path
      run: echo "::set-output name=working_path::$(pwd)"
    - name: Compiling aseprite for macOS
      run: |
        cd aseprite/
        mkdir build
        cd build
        cmake \
          -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DCMAKE_OSX_ARCHITECTURES=x86_64 \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 \
          -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \
          -DLAF_BACKEND=skia \
          -DSKIA_DIR=${{ steps.path.outputs.working_path }}/skia \
          -DSKIA_LIBRARY_DIR=${{ steps.path.outputs.working_path }}/skia/out/Release-x64 \
          -DSKIA_LIBRARY=${{ steps.path.outputs.working_path }}/skia/out/Release-x64/libskia.a \
          -G Ninja \
          -Wno-dev \
          ..
        ninja aseprite
    - name: Archive bin
      run: |
        cd aseprite/build/bin
        7z -tzip a Aseprite-mac-x64.zip * -mx0 | grep ing
        cd ../../..
        mv aseprite/build/bin/Aseprite-mac-x64.zip .
    - name: Upload macos artifact
      uses: actions/upload-artifact@v2
      with:
          path: Aseprite-mac-x64.zip
  Upload:
    needs: [build-macos]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download artifacts
      uses: actions/download-artifact@v2
    - name: Get tag
      run: echo "::set-output name=atb::$(cat release-versions/version.json)"
      id: links
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.links.outputs.atb }}
        name: Aseprite ${{ steps.links.outputs.atb }}
        files: |
          artifact/Aseprite-ubuntu_amd64.deb
        body: |
          Unofficial dev release.
          Support [official version](https://www.aseprite.org/download)
      env:
        GITHUB_TOKEN: ${{ secrets.work1 }}
